/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WorkspaceImport } from './routes/_workspace'
import { Route as ProtectedImport } from './routes/_protected'
import { Route as ProtectedIndexImport } from './routes/_protected/index'
import { Route as AuthVerifyEmailImport } from './routes/auth/verify-email'
import { Route as AuthSignUpImport } from './routes/auth/sign-up'
import { Route as AuthSignInImport } from './routes/auth/sign-in'
import { Route as AuthForgotPasswordImport } from './routes/auth/forgot-password'
import { Route as AuthChangePasswordImport } from './routes/auth/change-password'
import { Route as ProtectedWorkspaceSlugImport } from './routes/_protected/$workspaceSlug'
import { Route as AuthMfaSessionIdImport } from './routes/auth/mfa.$sessionId'
import { Route as WorkspaceWorkspaceNewImport } from './routes/_workspace/workspace.new'
import { Route as ProtectedWorkspaceSlugSearchImport } from './routes/_protected/$workspaceSlug/search'
import { Route as WorkspaceWorkspaceJoinInviteIdImport } from './routes/_workspace/workspace.join.$inviteId'
import { Route as ProtectedWorkspaceSlugSettingsSettingsImport } from './routes/_protected/$workspaceSlug/settings/_settings'
import { Route as ProtectedWorkspaceSlugCCollectionSlugImport } from './routes/_protected/$workspaceSlug/c/$collectionSlug'
import { Route as ProtectedWorkspaceSlugSettingsSettingsWorkspaceIndexImport } from './routes/_protected/$workspaceSlug/settings/_settings/workspace/index'
import { Route as ProtectedWorkspaceSlugSettingsSettingsWorkspaceMembersImport } from './routes/_protected/$workspaceSlug/settings/_settings/workspace/members'
import { Route as ProtectedWorkspaceSlugSettingsSettingsWorkspacePluginsIndexImport } from './routes/_protected/$workspaceSlug/settings/_settings/workspace/plugins/index'
import { Route as ProtectedWorkspaceSlugSettingsSettingsWorkspacePluginsSourcesImport } from './routes/_protected/$workspaceSlug/settings/_settings/workspace/plugins/sources'
import { Route as ProtectedWorkspaceSlugSettingsSettingsWorkspaceCCollectionSlugIndexImport } from './routes/_protected/$workspaceSlug/settings/_settings/workspace/c/$collectionSlug.index'
import { Route as ProtectedWorkspaceSlugSettingsSettingsWorkspaceCCollectionSlugMembersImport } from './routes/_protected/$workspaceSlug/settings/_settings/workspace/c/$collectionSlug.members'

// Create Virtual Routes

const LandingLazyImport = createFileRoute('/landing')()
const ProtectedWorkspaceSlugSettingsImport = createFileRoute(
  '/_protected/$workspaceSlug/settings',
)()
const ProtectedWorkspaceSlugIndexLazyImport = createFileRoute(
  '/_protected/$workspaceSlug/',
)()
const ProtectedWorkspaceSlugSettingsSettingsIndexLazyImport = createFileRoute(
  '/_protected/$workspaceSlug/settings/_settings/',
)()
const ProtectedWorkspaceSlugCCollectionSlugIndexLazyImport = createFileRoute(
  '/_protected/$workspaceSlug/c/$collectionSlug/',
)()
const ProtectedWorkspaceSlugSettingsSettingsSecurityLazyImport =
  createFileRoute('/_protected/$workspaceSlug/settings/_settings/security')()
const ProtectedWorkspaceSlugSettingsSettingsAppearanceLazyImport =
  createFileRoute('/_protected/$workspaceSlug/settings/_settings/appearance')()
const ProtectedWorkspaceSlugSettingsSettingsAccountLazyImport = createFileRoute(
  '/_protected/$workspaceSlug/settings/_settings/account',
)()
const ProtectedWorkspaceSlugCCollectionSlugEntryIdLazyImport = createFileRoute(
  '/_protected/$workspaceSlug/c/$collectionSlug/$entryId',
)()

// Create/Update Routes

const LandingLazyRoute = LandingLazyImport.update({
  id: '/landing',
  path: '/landing',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/landing.lazy').then((d) => d.Route))

const WorkspaceRoute = WorkspaceImport.update({
  id: '/_workspace',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedRoute = ProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedIndexRoute = ProtectedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProtectedRoute,
} as any)

const AuthVerifyEmailRoute = AuthVerifyEmailImport.update({
  id: '/auth/verify-email',
  path: '/auth/verify-email',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/auth/verify-email.lazy').then((d) => d.Route),
)

const AuthSignUpRoute = AuthSignUpImport.update({
  id: '/auth/sign-up',
  path: '/auth/sign-up',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/sign-up.lazy').then((d) => d.Route))

const AuthSignInRoute = AuthSignInImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/sign-in.lazy').then((d) => d.Route))

const AuthForgotPasswordRoute = AuthForgotPasswordImport.update({
  id: '/auth/forgot-password',
  path: '/auth/forgot-password',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/auth/forgot-password.lazy').then((d) => d.Route),
)

const AuthChangePasswordRoute = AuthChangePasswordImport.update({
  id: '/auth/change-password',
  path: '/auth/change-password',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/auth/change-password.lazy').then((d) => d.Route),
)

const ProtectedWorkspaceSlugRoute = ProtectedWorkspaceSlugImport.update({
  id: '/$workspaceSlug',
  path: '/$workspaceSlug',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedWorkspaceSlugSettingsRoute =
  ProtectedWorkspaceSlugSettingsImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => ProtectedWorkspaceSlugRoute,
  } as any)

const ProtectedWorkspaceSlugIndexLazyRoute =
  ProtectedWorkspaceSlugIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ProtectedWorkspaceSlugRoute,
  } as any).lazy(() =>
    import('./routes/_protected/$workspaceSlug/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthMfaSessionIdRoute = AuthMfaSessionIdImport.update({
  id: '/auth/mfa/$sessionId',
  path: '/auth/mfa/$sessionId',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/auth/mfa.$sessionId.lazy').then((d) => d.Route),
)

const WorkspaceWorkspaceNewRoute = WorkspaceWorkspaceNewImport.update({
  id: '/workspace/new',
  path: '/workspace/new',
  getParentRoute: () => WorkspaceRoute,
} as any)

const ProtectedWorkspaceSlugSearchRoute =
  ProtectedWorkspaceSlugSearchImport.update({
    id: '/search',
    path: '/search',
    getParentRoute: () => ProtectedWorkspaceSlugRoute,
  } as any)

const WorkspaceWorkspaceJoinInviteIdRoute =
  WorkspaceWorkspaceJoinInviteIdImport.update({
    id: '/workspace/join/$inviteId',
    path: '/workspace/join/$inviteId',
    getParentRoute: () => WorkspaceRoute,
  } as any)

const ProtectedWorkspaceSlugSettingsSettingsRoute =
  ProtectedWorkspaceSlugSettingsSettingsImport.update({
    id: '/_settings',
    getParentRoute: () => ProtectedWorkspaceSlugSettingsRoute,
  } as any)

const ProtectedWorkspaceSlugCCollectionSlugRoute =
  ProtectedWorkspaceSlugCCollectionSlugImport.update({
    id: '/c/$collectionSlug',
    path: '/c/$collectionSlug',
    getParentRoute: () => ProtectedWorkspaceSlugRoute,
  } as any)

const ProtectedWorkspaceSlugSettingsSettingsIndexLazyRoute =
  ProtectedWorkspaceSlugSettingsSettingsIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ProtectedWorkspaceSlugSettingsSettingsRoute,
  } as any).lazy(() =>
    import(
      './routes/_protected/$workspaceSlug/settings/_settings/index.lazy'
    ).then((d) => d.Route),
  )

const ProtectedWorkspaceSlugCCollectionSlugIndexLazyRoute =
  ProtectedWorkspaceSlugCCollectionSlugIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ProtectedWorkspaceSlugCCollectionSlugRoute,
  } as any).lazy(() =>
    import(
      './routes/_protected/$workspaceSlug/c/$collectionSlug/index.lazy'
    ).then((d) => d.Route),
  )

const ProtectedWorkspaceSlugSettingsSettingsSecurityLazyRoute =
  ProtectedWorkspaceSlugSettingsSettingsSecurityLazyImport.update({
    id: '/security',
    path: '/security',
    getParentRoute: () => ProtectedWorkspaceSlugSettingsSettingsRoute,
  } as any).lazy(() =>
    import(
      './routes/_protected/$workspaceSlug/settings/_settings/security.lazy'
    ).then((d) => d.Route),
  )

const ProtectedWorkspaceSlugSettingsSettingsAppearanceLazyRoute =
  ProtectedWorkspaceSlugSettingsSettingsAppearanceLazyImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => ProtectedWorkspaceSlugSettingsSettingsRoute,
  } as any).lazy(() =>
    import(
      './routes/_protected/$workspaceSlug/settings/_settings/appearance.lazy'
    ).then((d) => d.Route),
  )

const ProtectedWorkspaceSlugSettingsSettingsAccountLazyRoute =
  ProtectedWorkspaceSlugSettingsSettingsAccountLazyImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => ProtectedWorkspaceSlugSettingsSettingsRoute,
  } as any).lazy(() =>
    import(
      './routes/_protected/$workspaceSlug/settings/_settings/account.lazy'
    ).then((d) => d.Route),
  )

const ProtectedWorkspaceSlugCCollectionSlugEntryIdLazyRoute =
  ProtectedWorkspaceSlugCCollectionSlugEntryIdLazyImport.update({
    id: '/$entryId',
    path: '/$entryId',
    getParentRoute: () => ProtectedWorkspaceSlugCCollectionSlugRoute,
  } as any).lazy(() =>
    import(
      './routes/_protected/$workspaceSlug/c/$collectionSlug/$entryId.lazy'
    ).then((d) => d.Route),
  )

const ProtectedWorkspaceSlugSettingsSettingsWorkspaceIndexRoute =
  ProtectedWorkspaceSlugSettingsSettingsWorkspaceIndexImport.update({
    id: '/workspace/',
    path: '/workspace/',
    getParentRoute: () => ProtectedWorkspaceSlugSettingsSettingsRoute,
  } as any).lazy(() =>
    import(
      './routes/_protected/$workspaceSlug/settings/_settings/workspace/index.lazy'
    ).then((d) => d.Route),
  )

const ProtectedWorkspaceSlugSettingsSettingsWorkspaceMembersRoute =
  ProtectedWorkspaceSlugSettingsSettingsWorkspaceMembersImport.update({
    id: '/workspace/members',
    path: '/workspace/members',
    getParentRoute: () => ProtectedWorkspaceSlugSettingsSettingsRoute,
  } as any).lazy(() =>
    import(
      './routes/_protected/$workspaceSlug/settings/_settings/workspace/members.lazy'
    ).then((d) => d.Route),
  )

const ProtectedWorkspaceSlugSettingsSettingsWorkspacePluginsIndexRoute =
  ProtectedWorkspaceSlugSettingsSettingsWorkspacePluginsIndexImport.update({
    id: '/workspace/plugins/',
    path: '/workspace/plugins/',
    getParentRoute: () => ProtectedWorkspaceSlugSettingsSettingsRoute,
  } as any).lazy(() =>
    import(
      './routes/_protected/$workspaceSlug/settings/_settings/workspace/plugins/index.lazy'
    ).then((d) => d.Route),
  )

const ProtectedWorkspaceSlugSettingsSettingsWorkspacePluginsSourcesRoute =
  ProtectedWorkspaceSlugSettingsSettingsWorkspacePluginsSourcesImport.update({
    id: '/workspace/plugins/sources',
    path: '/workspace/plugins/sources',
    getParentRoute: () => ProtectedWorkspaceSlugSettingsSettingsRoute,
  } as any).lazy(() =>
    import(
      './routes/_protected/$workspaceSlug/settings/_settings/workspace/plugins/sources.lazy'
    ).then((d) => d.Route),
  )

const ProtectedWorkspaceSlugSettingsSettingsWorkspaceCCollectionSlugIndexRoute =
  ProtectedWorkspaceSlugSettingsSettingsWorkspaceCCollectionSlugIndexImport.update(
    {
      id: '/workspace/c/$collectionSlug/',
      path: '/workspace/c/$collectionSlug/',
      getParentRoute: () => ProtectedWorkspaceSlugSettingsSettingsRoute,
    } as any,
  )

const ProtectedWorkspaceSlugSettingsSettingsWorkspaceCCollectionSlugMembersRoute =
  ProtectedWorkspaceSlugSettingsSettingsWorkspaceCCollectionSlugMembersImport.update(
    {
      id: '/workspace/c/$collectionSlug/members',
      path: '/workspace/c/$collectionSlug/members',
      getParentRoute: () => ProtectedWorkspaceSlugSettingsSettingsRoute,
    } as any,
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedImport
      parentRoute: typeof rootRoute
    }
    '/_workspace': {
      id: '/_workspace'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof WorkspaceImport
      parentRoute: typeof rootRoute
    }
    '/landing': {
      id: '/landing'
      path: '/landing'
      fullPath: '/landing'
      preLoaderRoute: typeof LandingLazyImport
      parentRoute: typeof rootRoute
    }
    '/_protected/$workspaceSlug': {
      id: '/_protected/$workspaceSlug'
      path: '/$workspaceSlug'
      fullPath: '/$workspaceSlug'
      preLoaderRoute: typeof ProtectedWorkspaceSlugImport
      parentRoute: typeof ProtectedImport
    }
    '/auth/change-password': {
      id: '/auth/change-password'
      path: '/auth/change-password'
      fullPath: '/auth/change-password'
      preLoaderRoute: typeof AuthChangePasswordImport
      parentRoute: typeof rootRoute
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/auth/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpImport
      parentRoute: typeof rootRoute
    }
    '/auth/verify-email': {
      id: '/auth/verify-email'
      path: '/auth/verify-email'
      fullPath: '/auth/verify-email'
      preLoaderRoute: typeof AuthVerifyEmailImport
      parentRoute: typeof rootRoute
    }
    '/_protected/': {
      id: '/_protected/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ProtectedIndexImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/$workspaceSlug/search': {
      id: '/_protected/$workspaceSlug/search'
      path: '/search'
      fullPath: '/$workspaceSlug/search'
      preLoaderRoute: typeof ProtectedWorkspaceSlugSearchImport
      parentRoute: typeof ProtectedWorkspaceSlugImport
    }
    '/_workspace/workspace/new': {
      id: '/_workspace/workspace/new'
      path: '/workspace/new'
      fullPath: '/workspace/new'
      preLoaderRoute: typeof WorkspaceWorkspaceNewImport
      parentRoute: typeof WorkspaceImport
    }
    '/auth/mfa/$sessionId': {
      id: '/auth/mfa/$sessionId'
      path: '/auth/mfa/$sessionId'
      fullPath: '/auth/mfa/$sessionId'
      preLoaderRoute: typeof AuthMfaSessionIdImport
      parentRoute: typeof rootRoute
    }
    '/_protected/$workspaceSlug/': {
      id: '/_protected/$workspaceSlug/'
      path: '/'
      fullPath: '/$workspaceSlug/'
      preLoaderRoute: typeof ProtectedWorkspaceSlugIndexLazyImport
      parentRoute: typeof ProtectedWorkspaceSlugImport
    }
    '/_protected/$workspaceSlug/c/$collectionSlug': {
      id: '/_protected/$workspaceSlug/c/$collectionSlug'
      path: '/c/$collectionSlug'
      fullPath: '/$workspaceSlug/c/$collectionSlug'
      preLoaderRoute: typeof ProtectedWorkspaceSlugCCollectionSlugImport
      parentRoute: typeof ProtectedWorkspaceSlugImport
    }
    '/_protected/$workspaceSlug/settings': {
      id: '/_protected/$workspaceSlug/settings'
      path: '/settings'
      fullPath: '/$workspaceSlug/settings'
      preLoaderRoute: typeof ProtectedWorkspaceSlugSettingsImport
      parentRoute: typeof ProtectedWorkspaceSlugImport
    }
    '/_protected/$workspaceSlug/settings/_settings': {
      id: '/_protected/$workspaceSlug/settings/_settings'
      path: '/settings'
      fullPath: '/$workspaceSlug/settings'
      preLoaderRoute: typeof ProtectedWorkspaceSlugSettingsSettingsImport
      parentRoute: typeof ProtectedWorkspaceSlugSettingsRoute
    }
    '/_workspace/workspace/join/$inviteId': {
      id: '/_workspace/workspace/join/$inviteId'
      path: '/workspace/join/$inviteId'
      fullPath: '/workspace/join/$inviteId'
      preLoaderRoute: typeof WorkspaceWorkspaceJoinInviteIdImport
      parentRoute: typeof WorkspaceImport
    }
    '/_protected/$workspaceSlug/c/$collectionSlug/$entryId': {
      id: '/_protected/$workspaceSlug/c/$collectionSlug/$entryId'
      path: '/$entryId'
      fullPath: '/$workspaceSlug/c/$collectionSlug/$entryId'
      preLoaderRoute: typeof ProtectedWorkspaceSlugCCollectionSlugEntryIdLazyImport
      parentRoute: typeof ProtectedWorkspaceSlugCCollectionSlugImport
    }
    '/_protected/$workspaceSlug/settings/_settings/account': {
      id: '/_protected/$workspaceSlug/settings/_settings/account'
      path: '/account'
      fullPath: '/$workspaceSlug/settings/account'
      preLoaderRoute: typeof ProtectedWorkspaceSlugSettingsSettingsAccountLazyImport
      parentRoute: typeof ProtectedWorkspaceSlugSettingsSettingsImport
    }
    '/_protected/$workspaceSlug/settings/_settings/appearance': {
      id: '/_protected/$workspaceSlug/settings/_settings/appearance'
      path: '/appearance'
      fullPath: '/$workspaceSlug/settings/appearance'
      preLoaderRoute: typeof ProtectedWorkspaceSlugSettingsSettingsAppearanceLazyImport
      parentRoute: typeof ProtectedWorkspaceSlugSettingsSettingsImport
    }
    '/_protected/$workspaceSlug/settings/_settings/security': {
      id: '/_protected/$workspaceSlug/settings/_settings/security'
      path: '/security'
      fullPath: '/$workspaceSlug/settings/security'
      preLoaderRoute: typeof ProtectedWorkspaceSlugSettingsSettingsSecurityLazyImport
      parentRoute: typeof ProtectedWorkspaceSlugSettingsSettingsImport
    }
    '/_protected/$workspaceSlug/c/$collectionSlug/': {
      id: '/_protected/$workspaceSlug/c/$collectionSlug/'
      path: '/'
      fullPath: '/$workspaceSlug/c/$collectionSlug/'
      preLoaderRoute: typeof ProtectedWorkspaceSlugCCollectionSlugIndexLazyImport
      parentRoute: typeof ProtectedWorkspaceSlugCCollectionSlugImport
    }
    '/_protected/$workspaceSlug/settings/_settings/': {
      id: '/_protected/$workspaceSlug/settings/_settings/'
      path: '/'
      fullPath: '/$workspaceSlug/settings/'
      preLoaderRoute: typeof ProtectedWorkspaceSlugSettingsSettingsIndexLazyImport
      parentRoute: typeof ProtectedWorkspaceSlugSettingsSettingsImport
    }
    '/_protected/$workspaceSlug/settings/_settings/workspace/members': {
      id: '/_protected/$workspaceSlug/settings/_settings/workspace/members'
      path: '/workspace/members'
      fullPath: '/$workspaceSlug/settings/workspace/members'
      preLoaderRoute: typeof ProtectedWorkspaceSlugSettingsSettingsWorkspaceMembersImport
      parentRoute: typeof ProtectedWorkspaceSlugSettingsSettingsImport
    }
    '/_protected/$workspaceSlug/settings/_settings/workspace/': {
      id: '/_protected/$workspaceSlug/settings/_settings/workspace/'
      path: '/workspace'
      fullPath: '/$workspaceSlug/settings/workspace'
      preLoaderRoute: typeof ProtectedWorkspaceSlugSettingsSettingsWorkspaceIndexImport
      parentRoute: typeof ProtectedWorkspaceSlugSettingsSettingsImport
    }
    '/_protected/$workspaceSlug/settings/_settings/workspace/plugins/sources': {
      id: '/_protected/$workspaceSlug/settings/_settings/workspace/plugins/sources'
      path: '/workspace/plugins/sources'
      fullPath: '/$workspaceSlug/settings/workspace/plugins/sources'
      preLoaderRoute: typeof ProtectedWorkspaceSlugSettingsSettingsWorkspacePluginsSourcesImport
      parentRoute: typeof ProtectedWorkspaceSlugSettingsSettingsImport
    }
    '/_protected/$workspaceSlug/settings/_settings/workspace/plugins/': {
      id: '/_protected/$workspaceSlug/settings/_settings/workspace/plugins/'
      path: '/workspace/plugins'
      fullPath: '/$workspaceSlug/settings/workspace/plugins'
      preLoaderRoute: typeof ProtectedWorkspaceSlugSettingsSettingsWorkspacePluginsIndexImport
      parentRoute: typeof ProtectedWorkspaceSlugSettingsSettingsImport
    }
    '/_protected/$workspaceSlug/settings/_settings/workspace/c/$collectionSlug/members': {
      id: '/_protected/$workspaceSlug/settings/_settings/workspace/c/$collectionSlug/members'
      path: '/workspace/c/$collectionSlug/members'
      fullPath: '/$workspaceSlug/settings/workspace/c/$collectionSlug/members'
      preLoaderRoute: typeof ProtectedWorkspaceSlugSettingsSettingsWorkspaceCCollectionSlugMembersImport
      parentRoute: typeof ProtectedWorkspaceSlugSettingsSettingsImport
    }
    '/_protected/$workspaceSlug/settings/_settings/workspace/c/$collectionSlug/': {
      id: '/_protected/$workspaceSlug/settings/_settings/workspace/c/$collectionSlug/'
      path: '/workspace/c/$collectionSlug'
      fullPath: '/$workspaceSlug/settings/workspace/c/$collectionSlug'
      preLoaderRoute: typeof ProtectedWorkspaceSlugSettingsSettingsWorkspaceCCollectionSlugIndexImport
      parentRoute: typeof ProtectedWorkspaceSlugSettingsSettingsImport
    }
  }
}

// Create and export the route tree

interface ProtectedWorkspaceSlugCCollectionSlugRouteChildren {
  ProtectedWorkspaceSlugCCollectionSlugEntryIdLazyRoute: typeof ProtectedWorkspaceSlugCCollectionSlugEntryIdLazyRoute
  ProtectedWorkspaceSlugCCollectionSlugIndexLazyRoute: typeof ProtectedWorkspaceSlugCCollectionSlugIndexLazyRoute
}

const ProtectedWorkspaceSlugCCollectionSlugRouteChildren: ProtectedWorkspaceSlugCCollectionSlugRouteChildren =
  {
    ProtectedWorkspaceSlugCCollectionSlugEntryIdLazyRoute:
      ProtectedWorkspaceSlugCCollectionSlugEntryIdLazyRoute,
    ProtectedWorkspaceSlugCCollectionSlugIndexLazyRoute:
      ProtectedWorkspaceSlugCCollectionSlugIndexLazyRoute,
  }

const ProtectedWorkspaceSlugCCollectionSlugRouteWithChildren =
  ProtectedWorkspaceSlugCCollectionSlugRoute._addFileChildren(
    ProtectedWorkspaceSlugCCollectionSlugRouteChildren,
  )

interface ProtectedWorkspaceSlugSettingsSettingsRouteChildren {
  ProtectedWorkspaceSlugSettingsSettingsAccountLazyRoute: typeof ProtectedWorkspaceSlugSettingsSettingsAccountLazyRoute
  ProtectedWorkspaceSlugSettingsSettingsAppearanceLazyRoute: typeof ProtectedWorkspaceSlugSettingsSettingsAppearanceLazyRoute
  ProtectedWorkspaceSlugSettingsSettingsSecurityLazyRoute: typeof ProtectedWorkspaceSlugSettingsSettingsSecurityLazyRoute
  ProtectedWorkspaceSlugSettingsSettingsIndexLazyRoute: typeof ProtectedWorkspaceSlugSettingsSettingsIndexLazyRoute
  ProtectedWorkspaceSlugSettingsSettingsWorkspaceMembersRoute: typeof ProtectedWorkspaceSlugSettingsSettingsWorkspaceMembersRoute
  ProtectedWorkspaceSlugSettingsSettingsWorkspaceIndexRoute: typeof ProtectedWorkspaceSlugSettingsSettingsWorkspaceIndexRoute
  ProtectedWorkspaceSlugSettingsSettingsWorkspacePluginsSourcesRoute: typeof ProtectedWorkspaceSlugSettingsSettingsWorkspacePluginsSourcesRoute
  ProtectedWorkspaceSlugSettingsSettingsWorkspacePluginsIndexRoute: typeof ProtectedWorkspaceSlugSettingsSettingsWorkspacePluginsIndexRoute
  ProtectedWorkspaceSlugSettingsSettingsWorkspaceCCollectionSlugMembersRoute: typeof ProtectedWorkspaceSlugSettingsSettingsWorkspaceCCollectionSlugMembersRoute
  ProtectedWorkspaceSlugSettingsSettingsWorkspaceCCollectionSlugIndexRoute: typeof ProtectedWorkspaceSlugSettingsSettingsWorkspaceCCollectionSlugIndexRoute
}

const ProtectedWorkspaceSlugSettingsSettingsRouteChildren: ProtectedWorkspaceSlugSettingsSettingsRouteChildren =
  {
    ProtectedWorkspaceSlugSettingsSettingsAccountLazyRoute:
      ProtectedWorkspaceSlugSettingsSettingsAccountLazyRoute,
    ProtectedWorkspaceSlugSettingsSettingsAppearanceLazyRoute:
      ProtectedWorkspaceSlugSettingsSettingsAppearanceLazyRoute,
    ProtectedWorkspaceSlugSettingsSettingsSecurityLazyRoute:
      ProtectedWorkspaceSlugSettingsSettingsSecurityLazyRoute,
    ProtectedWorkspaceSlugSettingsSettingsIndexLazyRoute:
      ProtectedWorkspaceSlugSettingsSettingsIndexLazyRoute,
    ProtectedWorkspaceSlugSettingsSettingsWorkspaceMembersRoute:
      ProtectedWorkspaceSlugSettingsSettingsWorkspaceMembersRoute,
    ProtectedWorkspaceSlugSettingsSettingsWorkspaceIndexRoute:
      ProtectedWorkspaceSlugSettingsSettingsWorkspaceIndexRoute,
    ProtectedWorkspaceSlugSettingsSettingsWorkspacePluginsSourcesRoute:
      ProtectedWorkspaceSlugSettingsSettingsWorkspacePluginsSourcesRoute,
    ProtectedWorkspaceSlugSettingsSettingsWorkspacePluginsIndexRoute:
      ProtectedWorkspaceSlugSettingsSettingsWorkspacePluginsIndexRoute,
    ProtectedWorkspaceSlugSettingsSettingsWorkspaceCCollectionSlugMembersRoute:
      ProtectedWorkspaceSlugSettingsSettingsWorkspaceCCollectionSlugMembersRoute,
    ProtectedWorkspaceSlugSettingsSettingsWorkspaceCCollectionSlugIndexRoute:
      ProtectedWorkspaceSlugSettingsSettingsWorkspaceCCollectionSlugIndexRoute,
  }

const ProtectedWorkspaceSlugSettingsSettingsRouteWithChildren =
  ProtectedWorkspaceSlugSettingsSettingsRoute._addFileChildren(
    ProtectedWorkspaceSlugSettingsSettingsRouteChildren,
  )

interface ProtectedWorkspaceSlugSettingsRouteChildren {
  ProtectedWorkspaceSlugSettingsSettingsRoute: typeof ProtectedWorkspaceSlugSettingsSettingsRouteWithChildren
}

const ProtectedWorkspaceSlugSettingsRouteChildren: ProtectedWorkspaceSlugSettingsRouteChildren =
  {
    ProtectedWorkspaceSlugSettingsSettingsRoute:
      ProtectedWorkspaceSlugSettingsSettingsRouteWithChildren,
  }

const ProtectedWorkspaceSlugSettingsRouteWithChildren =
  ProtectedWorkspaceSlugSettingsRoute._addFileChildren(
    ProtectedWorkspaceSlugSettingsRouteChildren,
  )

interface ProtectedWorkspaceSlugRouteChildren {
  ProtectedWorkspaceSlugSearchRoute: typeof ProtectedWorkspaceSlugSearchRoute
  ProtectedWorkspaceSlugIndexLazyRoute: typeof ProtectedWorkspaceSlugIndexLazyRoute
  ProtectedWorkspaceSlugCCollectionSlugRoute: typeof ProtectedWorkspaceSlugCCollectionSlugRouteWithChildren
  ProtectedWorkspaceSlugSettingsRoute: typeof ProtectedWorkspaceSlugSettingsRouteWithChildren
}

const ProtectedWorkspaceSlugRouteChildren: ProtectedWorkspaceSlugRouteChildren =
  {
    ProtectedWorkspaceSlugSearchRoute: ProtectedWorkspaceSlugSearchRoute,
    ProtectedWorkspaceSlugIndexLazyRoute: ProtectedWorkspaceSlugIndexLazyRoute,
    ProtectedWorkspaceSlugCCollectionSlugRoute:
      ProtectedWorkspaceSlugCCollectionSlugRouteWithChildren,
    ProtectedWorkspaceSlugSettingsRoute:
      ProtectedWorkspaceSlugSettingsRouteWithChildren,
  }

const ProtectedWorkspaceSlugRouteWithChildren =
  ProtectedWorkspaceSlugRoute._addFileChildren(
    ProtectedWorkspaceSlugRouteChildren,
  )

interface ProtectedRouteChildren {
  ProtectedWorkspaceSlugRoute: typeof ProtectedWorkspaceSlugRouteWithChildren
  ProtectedIndexRoute: typeof ProtectedIndexRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedWorkspaceSlugRoute: ProtectedWorkspaceSlugRouteWithChildren,
  ProtectedIndexRoute: ProtectedIndexRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

interface WorkspaceRouteChildren {
  WorkspaceWorkspaceNewRoute: typeof WorkspaceWorkspaceNewRoute
  WorkspaceWorkspaceJoinInviteIdRoute: typeof WorkspaceWorkspaceJoinInviteIdRoute
}

const WorkspaceRouteChildren: WorkspaceRouteChildren = {
  WorkspaceWorkspaceNewRoute: WorkspaceWorkspaceNewRoute,
  WorkspaceWorkspaceJoinInviteIdRoute: WorkspaceWorkspaceJoinInviteIdRoute,
}

const WorkspaceRouteWithChildren = WorkspaceRoute._addFileChildren(
  WorkspaceRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof WorkspaceRouteWithChildren
  '/landing': typeof LandingLazyRoute
  '/$workspaceSlug': typeof ProtectedWorkspaceSlugRouteWithChildren
  '/auth/change-password': typeof AuthChangePasswordRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/auth/verify-email': typeof AuthVerifyEmailRoute
  '/': typeof ProtectedIndexRoute
  '/$workspaceSlug/search': typeof ProtectedWorkspaceSlugSearchRoute
  '/workspace/new': typeof WorkspaceWorkspaceNewRoute
  '/auth/mfa/$sessionId': typeof AuthMfaSessionIdRoute
  '/$workspaceSlug/': typeof ProtectedWorkspaceSlugIndexLazyRoute
  '/$workspaceSlug/c/$collectionSlug': typeof ProtectedWorkspaceSlugCCollectionSlugRouteWithChildren
  '/$workspaceSlug/settings': typeof ProtectedWorkspaceSlugSettingsSettingsRouteWithChildren
  '/workspace/join/$inviteId': typeof WorkspaceWorkspaceJoinInviteIdRoute
  '/$workspaceSlug/c/$collectionSlug/$entryId': typeof ProtectedWorkspaceSlugCCollectionSlugEntryIdLazyRoute
  '/$workspaceSlug/settings/account': typeof ProtectedWorkspaceSlugSettingsSettingsAccountLazyRoute
  '/$workspaceSlug/settings/appearance': typeof ProtectedWorkspaceSlugSettingsSettingsAppearanceLazyRoute
  '/$workspaceSlug/settings/security': typeof ProtectedWorkspaceSlugSettingsSettingsSecurityLazyRoute
  '/$workspaceSlug/c/$collectionSlug/': typeof ProtectedWorkspaceSlugCCollectionSlugIndexLazyRoute
  '/$workspaceSlug/settings/': typeof ProtectedWorkspaceSlugSettingsSettingsIndexLazyRoute
  '/$workspaceSlug/settings/workspace/members': typeof ProtectedWorkspaceSlugSettingsSettingsWorkspaceMembersRoute
  '/$workspaceSlug/settings/workspace': typeof ProtectedWorkspaceSlugSettingsSettingsWorkspaceIndexRoute
  '/$workspaceSlug/settings/workspace/plugins/sources': typeof ProtectedWorkspaceSlugSettingsSettingsWorkspacePluginsSourcesRoute
  '/$workspaceSlug/settings/workspace/plugins': typeof ProtectedWorkspaceSlugSettingsSettingsWorkspacePluginsIndexRoute
  '/$workspaceSlug/settings/workspace/c/$collectionSlug/members': typeof ProtectedWorkspaceSlugSettingsSettingsWorkspaceCCollectionSlugMembersRoute
  '/$workspaceSlug/settings/workspace/c/$collectionSlug': typeof ProtectedWorkspaceSlugSettingsSettingsWorkspaceCCollectionSlugIndexRoute
}

export interface FileRoutesByTo {
  '': typeof WorkspaceRouteWithChildren
  '/landing': typeof LandingLazyRoute
  '/auth/change-password': typeof AuthChangePasswordRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/auth/verify-email': typeof AuthVerifyEmailRoute
  '/': typeof ProtectedIndexRoute
  '/$workspaceSlug/search': typeof ProtectedWorkspaceSlugSearchRoute
  '/workspace/new': typeof WorkspaceWorkspaceNewRoute
  '/auth/mfa/$sessionId': typeof AuthMfaSessionIdRoute
  '/$workspaceSlug': typeof ProtectedWorkspaceSlugIndexLazyRoute
  '/$workspaceSlug/settings': typeof ProtectedWorkspaceSlugSettingsSettingsIndexLazyRoute
  '/workspace/join/$inviteId': typeof WorkspaceWorkspaceJoinInviteIdRoute
  '/$workspaceSlug/c/$collectionSlug/$entryId': typeof ProtectedWorkspaceSlugCCollectionSlugEntryIdLazyRoute
  '/$workspaceSlug/settings/account': typeof ProtectedWorkspaceSlugSettingsSettingsAccountLazyRoute
  '/$workspaceSlug/settings/appearance': typeof ProtectedWorkspaceSlugSettingsSettingsAppearanceLazyRoute
  '/$workspaceSlug/settings/security': typeof ProtectedWorkspaceSlugSettingsSettingsSecurityLazyRoute
  '/$workspaceSlug/c/$collectionSlug': typeof ProtectedWorkspaceSlugCCollectionSlugIndexLazyRoute
  '/$workspaceSlug/settings/workspace/members': typeof ProtectedWorkspaceSlugSettingsSettingsWorkspaceMembersRoute
  '/$workspaceSlug/settings/workspace': typeof ProtectedWorkspaceSlugSettingsSettingsWorkspaceIndexRoute
  '/$workspaceSlug/settings/workspace/plugins/sources': typeof ProtectedWorkspaceSlugSettingsSettingsWorkspacePluginsSourcesRoute
  '/$workspaceSlug/settings/workspace/plugins': typeof ProtectedWorkspaceSlugSettingsSettingsWorkspacePluginsIndexRoute
  '/$workspaceSlug/settings/workspace/c/$collectionSlug/members': typeof ProtectedWorkspaceSlugSettingsSettingsWorkspaceCCollectionSlugMembersRoute
  '/$workspaceSlug/settings/workspace/c/$collectionSlug': typeof ProtectedWorkspaceSlugSettingsSettingsWorkspaceCCollectionSlugIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_protected': typeof ProtectedRouteWithChildren
  '/_workspace': typeof WorkspaceRouteWithChildren
  '/landing': typeof LandingLazyRoute
  '/_protected/$workspaceSlug': typeof ProtectedWorkspaceSlugRouteWithChildren
  '/auth/change-password': typeof AuthChangePasswordRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/auth/verify-email': typeof AuthVerifyEmailRoute
  '/_protected/': typeof ProtectedIndexRoute
  '/_protected/$workspaceSlug/search': typeof ProtectedWorkspaceSlugSearchRoute
  '/_workspace/workspace/new': typeof WorkspaceWorkspaceNewRoute
  '/auth/mfa/$sessionId': typeof AuthMfaSessionIdRoute
  '/_protected/$workspaceSlug/': typeof ProtectedWorkspaceSlugIndexLazyRoute
  '/_protected/$workspaceSlug/c/$collectionSlug': typeof ProtectedWorkspaceSlugCCollectionSlugRouteWithChildren
  '/_protected/$workspaceSlug/settings': typeof ProtectedWorkspaceSlugSettingsRouteWithChildren
  '/_protected/$workspaceSlug/settings/_settings': typeof ProtectedWorkspaceSlugSettingsSettingsRouteWithChildren
  '/_workspace/workspace/join/$inviteId': typeof WorkspaceWorkspaceJoinInviteIdRoute
  '/_protected/$workspaceSlug/c/$collectionSlug/$entryId': typeof ProtectedWorkspaceSlugCCollectionSlugEntryIdLazyRoute
  '/_protected/$workspaceSlug/settings/_settings/account': typeof ProtectedWorkspaceSlugSettingsSettingsAccountLazyRoute
  '/_protected/$workspaceSlug/settings/_settings/appearance': typeof ProtectedWorkspaceSlugSettingsSettingsAppearanceLazyRoute
  '/_protected/$workspaceSlug/settings/_settings/security': typeof ProtectedWorkspaceSlugSettingsSettingsSecurityLazyRoute
  '/_protected/$workspaceSlug/c/$collectionSlug/': typeof ProtectedWorkspaceSlugCCollectionSlugIndexLazyRoute
  '/_protected/$workspaceSlug/settings/_settings/': typeof ProtectedWorkspaceSlugSettingsSettingsIndexLazyRoute
  '/_protected/$workspaceSlug/settings/_settings/workspace/members': typeof ProtectedWorkspaceSlugSettingsSettingsWorkspaceMembersRoute
  '/_protected/$workspaceSlug/settings/_settings/workspace/': typeof ProtectedWorkspaceSlugSettingsSettingsWorkspaceIndexRoute
  '/_protected/$workspaceSlug/settings/_settings/workspace/plugins/sources': typeof ProtectedWorkspaceSlugSettingsSettingsWorkspacePluginsSourcesRoute
  '/_protected/$workspaceSlug/settings/_settings/workspace/plugins/': typeof ProtectedWorkspaceSlugSettingsSettingsWorkspacePluginsIndexRoute
  '/_protected/$workspaceSlug/settings/_settings/workspace/c/$collectionSlug/members': typeof ProtectedWorkspaceSlugSettingsSettingsWorkspaceCCollectionSlugMembersRoute
  '/_protected/$workspaceSlug/settings/_settings/workspace/c/$collectionSlug/': typeof ProtectedWorkspaceSlugSettingsSettingsWorkspaceCCollectionSlugIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/landing'
    | '/$workspaceSlug'
    | '/auth/change-password'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/auth/verify-email'
    | '/'
    | '/$workspaceSlug/search'
    | '/workspace/new'
    | '/auth/mfa/$sessionId'
    | '/$workspaceSlug/'
    | '/$workspaceSlug/c/$collectionSlug'
    | '/$workspaceSlug/settings'
    | '/workspace/join/$inviteId'
    | '/$workspaceSlug/c/$collectionSlug/$entryId'
    | '/$workspaceSlug/settings/account'
    | '/$workspaceSlug/settings/appearance'
    | '/$workspaceSlug/settings/security'
    | '/$workspaceSlug/c/$collectionSlug/'
    | '/$workspaceSlug/settings/'
    | '/$workspaceSlug/settings/workspace/members'
    | '/$workspaceSlug/settings/workspace'
    | '/$workspaceSlug/settings/workspace/plugins/sources'
    | '/$workspaceSlug/settings/workspace/plugins'
    | '/$workspaceSlug/settings/workspace/c/$collectionSlug/members'
    | '/$workspaceSlug/settings/workspace/c/$collectionSlug'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/landing'
    | '/auth/change-password'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/auth/verify-email'
    | '/'
    | '/$workspaceSlug/search'
    | '/workspace/new'
    | '/auth/mfa/$sessionId'
    | '/$workspaceSlug'
    | '/$workspaceSlug/settings'
    | '/workspace/join/$inviteId'
    | '/$workspaceSlug/c/$collectionSlug/$entryId'
    | '/$workspaceSlug/settings/account'
    | '/$workspaceSlug/settings/appearance'
    | '/$workspaceSlug/settings/security'
    | '/$workspaceSlug/c/$collectionSlug'
    | '/$workspaceSlug/settings/workspace/members'
    | '/$workspaceSlug/settings/workspace'
    | '/$workspaceSlug/settings/workspace/plugins/sources'
    | '/$workspaceSlug/settings/workspace/plugins'
    | '/$workspaceSlug/settings/workspace/c/$collectionSlug/members'
    | '/$workspaceSlug/settings/workspace/c/$collectionSlug'
  id:
    | '__root__'
    | '/_protected'
    | '/_workspace'
    | '/landing'
    | '/_protected/$workspaceSlug'
    | '/auth/change-password'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/auth/verify-email'
    | '/_protected/'
    | '/_protected/$workspaceSlug/search'
    | '/_workspace/workspace/new'
    | '/auth/mfa/$sessionId'
    | '/_protected/$workspaceSlug/'
    | '/_protected/$workspaceSlug/c/$collectionSlug'
    | '/_protected/$workspaceSlug/settings'
    | '/_protected/$workspaceSlug/settings/_settings'
    | '/_workspace/workspace/join/$inviteId'
    | '/_protected/$workspaceSlug/c/$collectionSlug/$entryId'
    | '/_protected/$workspaceSlug/settings/_settings/account'
    | '/_protected/$workspaceSlug/settings/_settings/appearance'
    | '/_protected/$workspaceSlug/settings/_settings/security'
    | '/_protected/$workspaceSlug/c/$collectionSlug/'
    | '/_protected/$workspaceSlug/settings/_settings/'
    | '/_protected/$workspaceSlug/settings/_settings/workspace/members'
    | '/_protected/$workspaceSlug/settings/_settings/workspace/'
    | '/_protected/$workspaceSlug/settings/_settings/workspace/plugins/sources'
    | '/_protected/$workspaceSlug/settings/_settings/workspace/plugins/'
    | '/_protected/$workspaceSlug/settings/_settings/workspace/c/$collectionSlug/members'
    | '/_protected/$workspaceSlug/settings/_settings/workspace/c/$collectionSlug/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  ProtectedRoute: typeof ProtectedRouteWithChildren
  WorkspaceRoute: typeof WorkspaceRouteWithChildren
  LandingLazyRoute: typeof LandingLazyRoute
  AuthChangePasswordRoute: typeof AuthChangePasswordRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
  AuthVerifyEmailRoute: typeof AuthVerifyEmailRoute
  AuthMfaSessionIdRoute: typeof AuthMfaSessionIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  ProtectedRoute: ProtectedRouteWithChildren,
  WorkspaceRoute: WorkspaceRouteWithChildren,
  LandingLazyRoute: LandingLazyRoute,
  AuthChangePasswordRoute: AuthChangePasswordRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
  AuthVerifyEmailRoute: AuthVerifyEmailRoute,
  AuthMfaSessionIdRoute: AuthMfaSessionIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_protected",
        "/_workspace",
        "/landing",
        "/auth/change-password",
        "/auth/forgot-password",
        "/auth/sign-in",
        "/auth/sign-up",
        "/auth/verify-email",
        "/auth/mfa/$sessionId"
      ]
    },
    "/_protected": {
      "filePath": "_protected.tsx",
      "children": [
        "/_protected/$workspaceSlug",
        "/_protected/"
      ]
    },
    "/_workspace": {
      "filePath": "_workspace.tsx",
      "children": [
        "/_workspace/workspace/new",
        "/_workspace/workspace/join/$inviteId"
      ]
    },
    "/landing": {
      "filePath": "landing.lazy.tsx"
    },
    "/_protected/$workspaceSlug": {
      "filePath": "_protected/$workspaceSlug.tsx",
      "parent": "/_protected",
      "children": [
        "/_protected/$workspaceSlug/search",
        "/_protected/$workspaceSlug/",
        "/_protected/$workspaceSlug/c/$collectionSlug",
        "/_protected/$workspaceSlug/settings"
      ]
    },
    "/auth/change-password": {
      "filePath": "auth/change-password.tsx"
    },
    "/auth/forgot-password": {
      "filePath": "auth/forgot-password.tsx"
    },
    "/auth/sign-in": {
      "filePath": "auth/sign-in.tsx"
    },
    "/auth/sign-up": {
      "filePath": "auth/sign-up.tsx"
    },
    "/auth/verify-email": {
      "filePath": "auth/verify-email.tsx"
    },
    "/_protected/": {
      "filePath": "_protected/index.tsx",
      "parent": "/_protected"
    },
    "/_protected/$workspaceSlug/search": {
      "filePath": "_protected/$workspaceSlug/search.tsx",
      "parent": "/_protected/$workspaceSlug"
    },
    "/_workspace/workspace/new": {
      "filePath": "_workspace/workspace.new.tsx",
      "parent": "/_workspace"
    },
    "/auth/mfa/$sessionId": {
      "filePath": "auth/mfa.$sessionId.tsx"
    },
    "/_protected/$workspaceSlug/": {
      "filePath": "_protected/$workspaceSlug/index.lazy.tsx",
      "parent": "/_protected/$workspaceSlug"
    },
    "/_protected/$workspaceSlug/c/$collectionSlug": {
      "filePath": "_protected/$workspaceSlug/c/$collectionSlug.tsx",
      "parent": "/_protected/$workspaceSlug",
      "children": [
        "/_protected/$workspaceSlug/c/$collectionSlug/$entryId",
        "/_protected/$workspaceSlug/c/$collectionSlug/"
      ]
    },
    "/_protected/$workspaceSlug/settings": {
      "filePath": "_protected/$workspaceSlug/settings",
      "parent": "/_protected/$workspaceSlug",
      "children": [
        "/_protected/$workspaceSlug/settings/_settings"
      ]
    },
    "/_protected/$workspaceSlug/settings/_settings": {
      "filePath": "_protected/$workspaceSlug/settings/_settings.tsx",
      "parent": "/_protected/$workspaceSlug/settings",
      "children": [
        "/_protected/$workspaceSlug/settings/_settings/account",
        "/_protected/$workspaceSlug/settings/_settings/appearance",
        "/_protected/$workspaceSlug/settings/_settings/security",
        "/_protected/$workspaceSlug/settings/_settings/",
        "/_protected/$workspaceSlug/settings/_settings/workspace/members",
        "/_protected/$workspaceSlug/settings/_settings/workspace/",
        "/_protected/$workspaceSlug/settings/_settings/workspace/plugins/sources",
        "/_protected/$workspaceSlug/settings/_settings/workspace/plugins/",
        "/_protected/$workspaceSlug/settings/_settings/workspace/c/$collectionSlug/members",
        "/_protected/$workspaceSlug/settings/_settings/workspace/c/$collectionSlug/"
      ]
    },
    "/_workspace/workspace/join/$inviteId": {
      "filePath": "_workspace/workspace.join.$inviteId.tsx",
      "parent": "/_workspace"
    },
    "/_protected/$workspaceSlug/c/$collectionSlug/$entryId": {
      "filePath": "_protected/$workspaceSlug/c/$collectionSlug/$entryId.lazy.tsx",
      "parent": "/_protected/$workspaceSlug/c/$collectionSlug"
    },
    "/_protected/$workspaceSlug/settings/_settings/account": {
      "filePath": "_protected/$workspaceSlug/settings/_settings/account.lazy.tsx",
      "parent": "/_protected/$workspaceSlug/settings/_settings"
    },
    "/_protected/$workspaceSlug/settings/_settings/appearance": {
      "filePath": "_protected/$workspaceSlug/settings/_settings/appearance.lazy.tsx",
      "parent": "/_protected/$workspaceSlug/settings/_settings"
    },
    "/_protected/$workspaceSlug/settings/_settings/security": {
      "filePath": "_protected/$workspaceSlug/settings/_settings/security.lazy.tsx",
      "parent": "/_protected/$workspaceSlug/settings/_settings"
    },
    "/_protected/$workspaceSlug/c/$collectionSlug/": {
      "filePath": "_protected/$workspaceSlug/c/$collectionSlug/index.lazy.tsx",
      "parent": "/_protected/$workspaceSlug/c/$collectionSlug"
    },
    "/_protected/$workspaceSlug/settings/_settings/": {
      "filePath": "_protected/$workspaceSlug/settings/_settings/index.lazy.tsx",
      "parent": "/_protected/$workspaceSlug/settings/_settings"
    },
    "/_protected/$workspaceSlug/settings/_settings/workspace/members": {
      "filePath": "_protected/$workspaceSlug/settings/_settings/workspace/members.tsx",
      "parent": "/_protected/$workspaceSlug/settings/_settings"
    },
    "/_protected/$workspaceSlug/settings/_settings/workspace/": {
      "filePath": "_protected/$workspaceSlug/settings/_settings/workspace/index.tsx",
      "parent": "/_protected/$workspaceSlug/settings/_settings"
    },
    "/_protected/$workspaceSlug/settings/_settings/workspace/plugins/sources": {
      "filePath": "_protected/$workspaceSlug/settings/_settings/workspace/plugins/sources.tsx",
      "parent": "/_protected/$workspaceSlug/settings/_settings"
    },
    "/_protected/$workspaceSlug/settings/_settings/workspace/plugins/": {
      "filePath": "_protected/$workspaceSlug/settings/_settings/workspace/plugins/index.tsx",
      "parent": "/_protected/$workspaceSlug/settings/_settings"
    },
    "/_protected/$workspaceSlug/settings/_settings/workspace/c/$collectionSlug/members": {
      "filePath": "_protected/$workspaceSlug/settings/_settings/workspace/c/$collectionSlug.members.tsx",
      "parent": "/_protected/$workspaceSlug/settings/_settings"
    },
    "/_protected/$workspaceSlug/settings/_settings/workspace/c/$collectionSlug/": {
      "filePath": "_protected/$workspaceSlug/settings/_settings/workspace/c/$collectionSlug.index.tsx",
      "parent": "/_protected/$workspaceSlug/settings/_settings"
    }
  }
}
ROUTE_MANIFEST_END */
